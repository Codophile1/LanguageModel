package langModel;

import static org.junit.Assert.*;

import java.util.LinkedList;
import java.util.List;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestName;


/**
 * This JUnit Test Class has been generated by right clicking on the NgramUtil class
 * and selecting "New > Junit Test Case". After that, you have to select the methods 
 * for which you would like to generate tests. 
 * In practice, you will duplicate manually the test methods to possibly create 
 * several tests for one method.
 * 
 * Your work is then to remove the fail parts and to implement each test.
 * One method is given as an example
 * 
 * To run them:
 * either right click on the class name or simply on the method name and
 * select "Run As Junit Test".
 * 
 * @author N. Hernandez and S. Quiniou (2015)
 *
 */
public class NgramUtilTest {
	String sentence = "<s> cette phrase est de taille 9 . </s>";
	String ngram = "o√π commence l' historique de cet n-gramme";
	String sentenceCourte= "a b c d e f";



	/**
	 * Test method for {@link langModel.NgramUtil#getSequenceSize(java.lang.String)}.
	 */
	@Test
	public void testGetSequenceSize() {
	
		assertEquals(9, NgramUtil.getSequenceSize(sentence));
		assertEquals(7, NgramUtil.getSequenceSize(ngram));
		assertEquals(9, NgramUtil.getSequenceSize(sentence));
	}

	
	/**
	 * Test method for {@link langModel.NgramUtil#getHistory(java.lang.String, int)}.
	 */
	@Test
	public void testGetHistory() {
		assertEquals("9 . ",NgramUtil.getHistory(sentence, 3));
		assertEquals("l' historique de cet ",NgramUtil.getHistory(ngram, 5));
		assertEquals(" ", NgramUtil.getHistory(sentence, 0));
		assertEquals(" ", NgramUtil.getHistory(sentence, 1));


	}

	
	/**
	 * Test method for {@link langModel.NgramUtil#decomposeIntoNgrams(java.lang.String, int)}.
	 */
	@Test
	public void testDecomposeIntoNgrams() {
		List<String> listeTest1=new LinkedList<>();
		listeTest1.add(" a");
		listeTest1.add("a b");
		listeTest1.add("a b c");
		listeTest1.add("a b c d");
		listeTest1.add("b c d e");
		listeTest1.add("c d e f");
		
		assertEquals(listeTest1, NgramUtil.decomposeIntoNgrams(sentenceCourte,4));



		
	}
	
	
	/**
	 * Test method for {@link langModel.NgramUtil#generateNgrams(java.lang.String, int, int)}.
	 */
	@Test
	public void testGenerateNgrams() {
		List<String> listeTest1=new LinkedList<>();
		listeTest1.add(" a");
		listeTest1.add(" b");
		listeTest1.add(" c");
		listeTest1.add(" d");
		listeTest1.add(" e");
		listeTest1.add(" f");
		listeTest1.add("a b");
		listeTest1.add("b c");
		listeTest1.add("c d");
		listeTest1.add("d e");
		listeTest1.add("e f");
		
		assertEquals(listeTest1, NgramUtil.generateNgrams(sentenceCourte, 1, 2));
		

	}

	
	
	
	
	
	/**
	 * The following code displays a separator 
	 * between each method output
	 * 
	 * (manually added)
	 **/
	@Rule
	public TestName name = new TestName();

	@Before
	public void printSeparator()
	{
		System.out.println("\n=== " + name.getMethodName() + " =====================");
	}

}
